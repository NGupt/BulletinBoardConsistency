/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "communicate.h"
#include "article.h"
#include "string.h"

ArticlePool articlePool;

int *
post_1_svc(char *content,  struct svc_req *rqstp)
{
    std::string myString(content, strlen(content));
    static int result = articlePool.post(myString);
	/*
	 * insert server code here
	 */

	return &result;
}

char **
read_1_svc(struct svc_req *rqstp)
{
    string resultStr = articlePool.read();
	static char * result = new char[resultStr.length() + 1];
    strcpy(result, resultStr.c_str());
	/*
	 * insert server code here
	 */

	return &result;
}

ArticleContent *
choose_1_svc(int index,  struct svc_req *rqstp)
{
	static ArticleContent  result;
    Article * resultArticle = articlePool.choose(index);
    result.content = new char[resultArticle->content.length() + 1];
    strcpy(result.content, resultArticle->content.c_str());
    result.index = resultArticle->index;
	/*
	 * insert server code here
	 */

	return &result;
}

int *
reply_1_svc(char *content, int index,  struct svc_req *rqstp)
{
    string resultStr(content, strlen(content));
	static int  result = articlePool.reply(resultStr, index);

	/*
	 * insert server code here
	 */

	return &result;
}
